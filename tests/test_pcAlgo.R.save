
R version 2.4.0 (2006-10-03)
Copyright (C) 2006 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

Attaching package of SfS goodies.. Loading required package: stats
Loading required package: methods
Loading required package: utils
 ... and today's fortune() cookie is:

It was simple, but you know, it's always simple when you've done it.
   -- Simone Gabbriellini (after solving a problem with a trick suggested on
      the list)
      R-help (August 2005)

Working directory : /sfs/u/staff/kalisch/R/Pkgs/pcalg/tests  {change with setwd()}
> invisible(options(echo = TRUE))
> library(pcalg)
Loading required package: MASS
Loading required package: graph
Loading required package: Ruuid
Loading required package: robustbase

Attaching package: 'robustbase'


	The following object(s) are masked from package:sfsmisc :

	 huberM 

Loading required package: Rgraphviz
Loading required package: geneplotter
Loading required package: annotate
Loading required package: Biobase
Loading required package: tools

Welcome to Bioconductor

    Vignettes contain introductory material. To view, type
    'openVignette()' or start with 'help(Biobase)'. For details
    on reading vignettes, see the openVignette help page.

KernSmooth 2.22 installed
Copyright M. P. Wand 1997
Loading required package: ggm

Attaching package: 'ggm'


	The following object(s) are masked from package:graph :

	 edgeMatrix 

> 
> set.seed(2)
> ## Parameters
> p <- 5
> n <- 1000
> alpha <- 0.05
> s <- 0.6
> 
> mlb <- 0.1
> mub <- 1
> dag <- randomDAG(p,s,lB=mlb,uB=mub)
> data <- rmvDAG(n, dag)
> ## TODO: improve this, once we have print(),plot() methods:
> r1 <- pcAlgo(data,alpha, verbose=TRUE)
Order=0; remaining edges:20
Order=1; remaining edges:20
Order=2; remaining edges:12
Order=3; remaining edges:12
Final graph adjacency matrix:
              
[1,] . | | | .
[2,] | . . | .
[3,] | . . | .
[4,] | | | . |
[5,] . . . | .
> 
> if(dev.interactive()) {
+     op <- par(mfrow=c(1,2))
+     plot(dag,      main = "true")
+     plot(r1@graph, main = "estimate")
+     par(op)
+ }
> 
> ## check TPR, FPR and TDR for randomly generated data
> dag <- randomDAG(p,s,lB=mlb,uB=mub)
> data <- rmvDAG(n, dag)
> r <- pcAlgo(data,alpha,verbose=TRUE)
Order=0; remaining edges:20
Order=1; remaining edges:14
Order=2; remaining edges:12
Order=3; remaining edges:10
Final graph adjacency matrix:
              
[1,] . . . . |
[2,] . . | . |
[3,] . | . . |
[4,] . . . . |
[5,] | | | | .
> cgr <- compareGraphs(r@graph, dag)
> if (abs(round(cgr["tpr"]-0.83333333333,10))>1e-10)
+     stop("Inconsistent result in Testing test_pcAlgo.R")
> 
> if(dev.interactive()) {
+     c.cgr <- format(round(cgr, 3))
+     op <- par(mfrow=c(1,2))
+     plot(dag, main = "true")
+     plot(r@graph, main = "estimated skeleton")
+     mtext(paste(paste(toupper(names(c.cgr)), c.cgr, sep="= "),
+ 		collapse=", "))
+     par(op)
+ }
> 
> ## check generating CPDAG
> rD <- pcAlgo(data,alpha,verbose=TRUE,directed=TRUE)
Order=0; remaining edges:20
Order=1; remaining edges:14
Order=2; remaining edges:12
Order=3; remaining edges:10
Final graph adjacency matrix:
              
[1,] . . . . |
[2,] . . | . |
[3,] . | . . |
[4,] . . . . |
[5,] | | | | .
> (as(rD@graph,"matrix"))
  1 2 3 4 5
1 0 0 0 0 1
2 0 0 1 0 1
3 0 1 0 0 1
4 0 0 0 0 1
5 0 0 0 0 0
> 
> proc.time()
[1] 4.581 0.414 8.699 0.017 0.017
> 
