V 0.1-5
##########
(- fällig, + behoben)
+ Hilfe von pcorOrder gibt Matrixinversion für k>4 an; das wird aber nicht
  gemacht - DOCH ABER IN DER FUNKTION zStat; habe die Matrixinversion
  auskommentiert, weil es Singularitaetsprobleme gab.
  ERGO: Hilfeseite aendern - BEHOBEN
+ In pdag2dag: Graph ohne Kanten als Input hat Fehler geliefert - BEHOBEN
+ In dag2cpdag: Falls input DAG keine Kante hatte, wurde die Anzahl Knoten
  nicht lokal definiert; der globale Wert war falsch. - BEHOBEN
+ Das File /R/bugs/pdag2dagTest.R produziert einen Fehler in pdag2dag: Ein
  PDAG, der nicht erweiterbar ist, wird ohne Fehlermeldung in einen
  zyklischen Graphen erweitert. - BEHOBEN
##########
V 0.1-7
##########
- pdag2dag: Problem wenn Nodelabels aus Gross- und Kleinbuchstaben bestehen
  (Loesungsvorschlag unter: pdag2dagNodeNames.R)
##########
V 0.1-9
##########
+ udag2pdagSpecial: p wird erst verwendet und dann generiert - BEHOBEN
+ beta.special und beta.special.pcObj gehen unterschiedlich vor, wenn y im
Elternset von x ist.(pa2 <- setdiff(pa2, y.pos) in beta.special.pcObj) -
BEHOBEN (setdiff entfernt)
+ compareGraphs: Bei ml wurde nicht geprueft, ob Eintraege nur 0/1
sind. Bei den von mir verwendeten Methoden war das garantiert, allgemein
aber nicht. Dieser Sicherheitscheck wurde nun hinzugefuegt. - BEHOBEN
##########
V 1.0-2
##########
+ randomDAG: Falls leerer graph generiert wird, kann er mit as(G,"matrix")
nicht konvertiert werden. - BEHOBEN
+ compareGraphs: Im Beispiel der Dokumentation: stopifnot(cg == c(1, 1/2,
4/5)) führt zu Problem bei Mac, weil dort RGraphviz nicht verfügbar
ist. Kann gelöst werden, wenn der Graphenvgl. in die if-Schleife genommen
wird. - BEHOBEN
+ Datenfiles brauchen auch eine Hilfeseite - BEHOBEN
+ andere Warnings auf CRAN

1) although dimensions of my fixedGaps matrix agreed with p,
I got: "Error in skeleton(suffStat, indepTest, p, alpha, verbose =
verbose, fixedGaps = fixedGaps,  :
 Dimensions of the dataset and fixedGaps do not agree."

I tracked this down to line 13 of function skeleton:
    if (!(identical(dim(fixedGaps), c(p, p)))) { ...
which returned 'false' in my case.
     if (!(identical(as.numeric(dim(fG)), c(p, p)))) ...
seemed to fix this.

2) line 17 of skeleton says:
 if (fixedGaps != t(fixedGaps)) {
and yields:
'Warning message:
In if (fixedGaps != t(fixedGaps)) { :
 the condition has length > 1 and only the first element will be used'
if fixedGaps is provided. Also, pc runs even if the fixedGaps matrix
is not symmetric, but the first element is TRUE.
I think
    !identical(fG, t(fG))
would help here.

########
V 1.1-2
########
+ counter in pc.cons.intern war nur innerhalb if-Schlaufe definiert, wurde
aber ausserhalb gebraucht - BEHOBEN

- in ida: ii <- 1 sollte in der if-Bedingung unter "no member of pa2" sein
  - BEHOBEN
